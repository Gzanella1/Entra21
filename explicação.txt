get busca registro (read)
post cria registro (create)
put função principal é a  atualização. se nao tiver um identificador ele cria()
patch (?) só atualiza   DE PREFERENCIA USA O PUT
delete  (DELETE)

model 
view  camada de processamento 
control porta de entrada para nos conectarmos com as api



-@entity Uma Entity (Entidade) é um objeto leve de domínio persistente 
utilizado para representar uma tabela do banco de dados, sendo que cada instância da entidade corresponde a uma linha da tabela.

-ResponseEntity significa representar toda a resposta HTTP. Você pode controlar qualquer coisa que aconteça: código de status, cabeçalhos e corpo. Trabalhando com microservice, ResponseEntity para enviar resposta completa, com status, com cabeçalho e corpo

-@Autowired - o Autowired, indica um ponto aonde a injeção automática deve ser aplicada. 

-@GeneratedValue?
A anotação GeneratedValue serve para falar que o campo mapeado será gerado automaticamente pelo banco de dados, ai temos algumas estratégias para que o próprio banco consiga fazer esse trabalho, quando usamos Identity falamos que deve pegar o último registro daquela tabela e seguir com base naquele.

-@RestController: @Controller: é usado para sinalizar que a classe é um MVC Controller do Spring.
@RestController: Esta anotação adiciona automaticamente a anotação @Controller e @ResponseBody e não faz nada além disso, e neste caso todo retorno do serviço será transformado para um JSON.

DTO-é um padrão de projetos bastante usado em Java para o transporte de dados entre diferentes componentes de um sistema, diferentes instâncias ou processos de um sistema distribuído ou diferentes sistemas via serialização.

JpaRepositor 

-@RequestBody indica que o valor do objeto virá do corpo da requisição; E a anotação @Valid indica que os dados recebidos devem ser validados.

@PathVariable o @PathVariable é utilizado quando o valor da variável é passada diretamente na URL, mas não como um parametro que você passa após o sinal de interrogação ( ? ) mas sim quando o valor faz parte da url .

 Optional <FranquiaEntity> franquia = franquiaRepository.findById(id); //Optional ?

if (entity.isPresent()) {



















